// generator client {
//   provider = "prisma-client-js"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

// model User {
//   id             String    @id @default(cuid())
//   name           String?
//   email          String    @unique
//   emailVerified  DateTime?
//   image          String?
//   hashedPassword String?
//   createdAt      DateTime  @default(now())
//   updatedAt      DateTime  @updatedAt
//   role           Role      @default(USER)
//   orderCount     Int       @default(0)
//   isPaidUser     Boolean   @default(false)
//   customers      Customer[]
//   orders         Order[]
//   communityPosts CommunityPost[]
//   settings       Settings?
//   accounts       Account[]
//   sessions       Session[]
// }

// model Account {
//   id                 String  @id @default(cuid())
//   userId             String
//   type               String
//   provider           String
//   providerAccountId  String
//   refresh_token      String?
//   access_token       String?
//   expires_at         Int?
//   token_type         String?
//   scope              String?
//   id_token           String?
//   session_state      String?
//   oauth_token_secret String?
//   oauth_token        String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

// model Session {
//   id           String   @id @default(cuid())
//   sessionToken String   @unique
//   userId       String
//   expires      DateTime
//   user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
// }

// model VerificationToken {
//   identifier String
//   token      String   @unique
//   expires    DateTime

//   @@unique([identifier, token])
// }

// model Customer {
//   id        String   @id @default(cuid())
//   name      String
//   email     String
//   phone     String?
//   userId    String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   user      User     @relation(fields: [userId], references: [id])
//   orders    Order[]
// }

// model Order {
//   id         String      @id @default(cuid())
//   orderDate  DateTime    @default(now())
//   totalPrice  Float    @default(0.0)
//   status     OrderStatus @default(PENDING)
//   customerId String
//   userId     String
//   createdAt  DateTime    @default(now())
//   updatedAt  DateTime    @updatedAt
//   customer   Customer    @relation(fields: [customerId], references: [id])
//   user       User        @relation(fields: [userId], references: [id])
//   orderItems OrderItem[]
// }

// model OrderItem {
//   id          String   @id @default(cuid())
//   productName String
//   quantity    Int
//   price       Float
//   orderId     String
//   createdAt   DateTime @default(now())
//   updatedAt   DateTime @updatedAt
//   order       Order    @relation(fields: [orderId], references: [id])
// }

// model CommunityPost {
//   id        String   @id @default(cuid())
//   title     String
//   content   String
//   userId    String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   user      User     @relation(fields: [userId], references: [id])
// }

// model Settings {
//   id                 String  @id @default(cuid())
//   emailNotifications Boolean @default(true)
//   language           String  @default("en")
//   userId             String  @unique
//   user               User    @relation(fields: [userId], references: [id])
// }

// enum Role {
//   USER
//   ADMIN
// }

// enum OrderStatus {
//   PENDING
//   PROCESSING
//   COMPLETED
//   CANCELLED
// }
